<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppTerminated" xml:space="preserve">
    <value>Terminated app: {0}</value>
  </data>
  <data name="BackgroundRetryException" xml:space="preserve">
    <value>BackgroundTasks cannot have a retry value!</value>
  </data>
  <data name="BackgroundTaskTypeException" xml:space="preserve">
    <value>BackgroundTasks must be ExecutableTask, PowerShellTask, or BatchFileTask!</value>
  </data>
  <data name="BackgroundTimeoutException" xml:space="preserve">
    <value>BackgroundTasks cannot have a timeout value!</value>
  </data>
  <data name="ClientNotConnected" xml:space="preserve">
    <value>Start connection first!</value>
  </data>
  <data name="DuplicateTaskRunGuid" xml:space="preserve">
    <value>TaskRun {0} could not be loaded from file as it already exists!</value>
  </data>
  <data name="EndWaitingForExternalResult" xml:space="preserve">
    <value>A FactoryOrchestratorClient completed the TaskRun with Status: {0}, Exit code: {1}</value>
  </data>
  <data name="FactoryOrchestratorConnectionException" xml:space="preserve">
    <value>Failed to communicate with Factory Orchestrator Service on {0}</value>
  </data>
  <data name="FactoryOrchestratorTaskListRunningException" xml:space="preserve">
    <value>Cannot perform operation because one or more TaskLists are actively running!</value>
  </data>
  <data name="FactoryOrchestratorTaskListRunningExceptionWithGuid" xml:space="preserve">
    <value>Cannot perform operation because TaskList {0} is actively running!</value>
  </data>
  <data name="FactoryOrchestratorUnkownGuidException" xml:space="preserve">
    <value>Guid is not valid!</value>
  </data>
  <data name="FactoryOrchestratorUnkownGuidExceptionWithGuid" xml:space="preserve">
    <value>{0} is not valid!</value>
  </data>
  <data name="FactoryOrchestratorUnkownGuidExceptionWithGuidAndType" xml:space="preserve">
    <value>{0} is not a valid {1}!</value>
  </data>
  <data name="FactoryOrchestratorVersionMismatchException" xml:space="preserve">
    <value>Factory Orchestrator Service on {ip} has version {serviceVersion} which is incompatable with FactoryOrchestratorClient version {clientVersion}! Use Connect(true) or TryConnect(true) to ignore this error when connecting.</value>
  </data>
  <data name="FileNotFoundException" xml:space="preserve">
    <value>{0} does not exist!</value>
  </data>
  <data name="FOXMLFileLoadException" xml:space="preserve">
    <value>Could not load {0} as FactoryOrchestratorXML!</value>
  </data>
  <data name="InvalidTaskRunTypeException" xml:space="preserve">
    <value>TaskRun has an invalid TaskType!</value>
  </data>
  <data name="LogFileCreationFailed" xml:space="preserve">
    <value>WARNING: Log File {0} could not be created</value>
  </data>
  <data name="LogFolderMoveFailed" xml:space="preserve">
    <value>Could not move log folder!</value>
  </data>
  <data name="NoMethodFound" xml:space="preserve">
    <value>Could not find method with name {0}</value>
  </data>
  <data name="ProcessExited" xml:space="preserve">
    <value>Process exited.</value>
  </data>
  <data name="ProcessStartError" xml:space="preserve">
    <value>Process failed to start!</value>
  </data>
  <data name="RedirectingToRunAsExplorerUser" xml:space="preserve">
    <value>{0} is a Win32 GUI program. Redirecting to run via RunAsExplorerUser...</value>
  </data>
  <data name="RunningGuiAsSystemWarning" xml:space="preserve">
    <value>WARNING: {0} is a Win32 GUI program. It may not run properly as SYSTEM</value>
  </data>
  <data name="SourceDirectoryNotFound" xml:space="preserve">
    <value>Source directory does not exist or could not be found:</value>
  </data>
  <data name="TaefCheckFailed" xml:space="preserve">
    <value>Unable to invoke TE.exe to validate possible TAEF test: {0}</value>
  </data>
  <data name="TaefCheckReturnedError" xml:space="preserve">
    <value>TE.exe returned error {0} when trying to validate possible TAEF test: {1}</value>
  </data>
  <data name="TaefCheckTimeout" xml:space="preserve">
    <value>TE.exe timed out trying to validate possible TAEF test: {0}</value>
  </data>
  <data name="TaefValidationFailed" xml:space="preserve">
    <value>Unable to validate possible TAEF test: {0}</value>
  </data>
  <data name="TaskBaseDeserializationException" xml:space="preserve">
    <value>Trying to deserialize an unknown task type!</value>
  </data>
  <data name="TaskBaseSerializationException" xml:space="preserve">
    <value>Trying to serialize an unknown task type!</value>
  </data>
  <data name="TaskListCountMismatch" xml:space="preserve">
    <value>Server has {0} TaskLists but new order has only {1} GUIDs!</value>
  </data>
  <data name="TaskListExistsAlready" xml:space="preserve">
    <value>TaskList with guid {0} already exists!</value>
  </data>
  <data name="TaskListSaveFailed" xml:space="preserve">
    <value>Could not save TaskLists to {0}!</value>
  </data>
  <data name="TaskListToString" xml:space="preserve">
    <value>TaskList {0} ({1}) with status {2}</value>
  </data>
  <data name="TooManyMethodsFound" xml:space="preserve">
    <value>More than one method with name {0}</value>
  </data>
  <data name="UnsupportedGuidType" xml:space="preserve">
    <value>Unsupported guid type to poll!</value>
  </data>
  <data name="WDPAppLaunchFailed" xml:space="preserve">
    <value>Error: Failed to launch AUMID: {0}</value>
  </data>
  <data name="WDPAppLaunchFailed2" xml:space="preserve">
    <value>Error: Device Portal is required for app launch and may not be running on the system.</value>
  </data>
  <data name="WDPAppLaunchFailed3" xml:space="preserve">
    <value>Error: If it is running, the AUMID may be incorrect.</value>
  </data>
  <data name="WDPAppLaunchSucceeded" xml:space="preserve">
    <value>Sucessfully launched app with AUMID: {0}</value>
  </data>
  <data name="WDPError" xml:space="preserve">
    <value>Windows Device Portal failed with error</value>
  </data>
  <data name="WDPHttpError" xml:space="preserve">
    <value>Windows Device Portal failed with HTTP error</value>
  </data>
</root>