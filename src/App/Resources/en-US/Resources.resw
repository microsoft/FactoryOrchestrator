<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AbortAllButton.Content" xml:space="preserve">
    <value>Abort all</value>
  </data>
  <data name="AbortAllButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Abort all running TaskLists</value>
  </data>
  <data name="AbortButton.Content" xml:space="preserve">
    <value>Abort ⛔</value>
  </data>
  <data name="Aborted" xml:space="preserve">
    <value>⛔ Aborted</value>
  </data>
  <data name="AbortOnFailBox.Content" xml:space="preserve">
    <value>Abort TaskList on Task failure?</value>
  </data>
  <data name="About.Content" xml:space="preserve">
    <value>About Factory Orchestrator</value>
  </data>
  <data name="AboutButton.Content" xml:space="preserve">
    <value>About Factory Orchestrator</value>
  </data>
  <data name="ActionRequired.Text" xml:space="preserve">
    <value>Action Required</value>
  </data>
  <data name="AppBlock.Text" xml:space="preserve">
    <value>App:</value>
  </data>
  <data name="Apps.Content" xml:space="preserve">
    <value>UWP Apps</value>
  </data>
  <data name="Apps.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Launch UWP apps</value>
  </data>
  <data name="AppVersion" xml:space="preserve">
    <value>App Version</value>
  </data>
  <data name="ArgumentsBlock.Text" xml:space="preserve">
    <value>Arguments:</value>
  </data>
  <data name="AttemptingLocalHost.Text" xml:space="preserve">
    <value>Attempting to connect to your local device</value>
  </data>
  <data name="AUMID" xml:space="preserve">
    <value>AUMID:</value>
    <comment>App user model id</comment>
  </data>
  <data name="AutoPassCheck.Content" xml:space="preserve">
    <value>Auto Pass App on Launch?</value>
  </data>
  <data name="BackButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Go Back</value>
  </data>
  <data name="BadIpContent" xml:space="preserve">
    <value>Could not connect to {0}.

Check that the IP address, Server Name and Certificate Hash  is correct and that the Factory Orchestrator Service is running on the target IP.</value>
    <comment>Message displayed to the user if connection to the target machine cannot be established.</comment>
  </data>
  <data name="BadIpTitle" xml:space="preserve">
    <value>Unable to connect to target IP</value>
  </data>
  <data name="BgTaskBox.Content" xml:space="preserve">
    <value>Add as Background Task?</value>
  </data>
  <data name="BgTasksHeader.Text" xml:space="preserve">
    <value>Background Tasks:</value>
  </data>
  <data name="BlockingCheck.Content" xml:space="preserve">
    <value>Allow Other TaskLists to Run?</value>
  </data>
  <data name="Boot" xml:space="preserve">
    <value>Boot</value>
    <comment>Refers to the startup of the PC.</comment>
  </data>
  <data name="BootTaskWarning.Text" xml:space="preserve">
    <value>⚠ Service is executing Boot tasks, many funtions are disabled until finished or aborted ⚠</value>
  </data>
  <data name="BgTaskListView.AutomationProperties.Name" xml:space="preserve">
    <value>Background Tasks:</value>
    <comment>This shows background tasklist</comment>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CancelCopy.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Cancel file copy</value>
  </data>
  <data name="CancelEdit.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CheckPath" xml:space="preserve">
    <value>Check the path and try again.</value>
  </data>
  <data name="ClearButton.Content" xml:space="preserve">
    <value>Clear Output</value>
  </data>
  <data name="ClientText.Text" xml:space="preserve">
    <value>Local File/Folder:</value>
  </data>
  <data name="CommandConst.Text" xml:space="preserve">
    <value>Command:</value>
  </data>
  <data name="CommandPromptText.Text" xml:space="preserve">
    <value>Command Prompt</value>
  </data>
  <data name="CommentBlock.Text" xml:space="preserve">
    <value>Notes (Optional)</value>
  </data>
  <data name="ConfirmCopy.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Confirm file copy</value>
  </data>
  <data name="ConfirmEdit.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="AdvancedOptionsButton.Content" xml:space="preserve">
    <value>Advanced Options</value>
    <comment>Content for button to show advanced options.</comment>
  </data>
  <data name="HideAdvancedOptionsButton" xml:space="preserve">
    <value>Hide Advanced Options</value>
    <comment>Content for button to hide advanced options.</comment>
  </data>
  <data name="Port.Text" xml:space="preserve">
    <value>Port:</value>
    <comment>Port number on which Microsoft.FactoryOrchestrator.Service is running.</comment>
  </data>
  <data name="ConnectButton.Content" xml:space="preserve">
    <value>Connect to custom IP and port</value>
  </data>
  <data name="Console.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Non-interactive cmd.exe prompt</value>
  </data>
  <data name="ContainerBox.Content" xml:space="preserve">
    <value>Run In Container?</value>
  </data>
  <data name="ContainerCheckBox.Content" xml:space="preserve">
    <value>Run In Container?</value>
  </data>
  <data name="ContainerCheckBox.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>If checked, command is run in the container</value>
  </data>
  <data name="ContainerIP" xml:space="preserve">
    <value>Container IP (Internal)</value>
  </data>
  <data name="CouldNotQuery" xml:space="preserve">
    <value>Could not query</value>
  </data>
  <data name="Debug" xml:space="preserve">
    <value>Debug</value>
  </data>
  <data name="DeleteAll.Text" xml:space="preserve">
    <value>Delete All TaskLists</value>
  </data>
  <data name="DeleteAllContent" xml:space="preserve">
    <value>All running TaskLists will be stopped. All TaskLists will be removed from the server permanently.

Manually exported FactoryOrchestratorXML files will not be deleted, but will need to be manually imported via "Load FactoryOrchestratorXML file".

If "Factory Reset" is chosen, the service is restarted as if it is first boot. First boot and every boot tasks will re-run. Initial TaskLists will be loaded. NOTE: Network communication is not disabled, connected clients may encounter issues and the 'EnableNetworkAccess' setting will be ignored!</value>
  </data>
  <data name="DeleteButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Delete Task</value>
    <comment>Delete a task</comment>
  </data>
  <data name="EditButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Edit Task</value>
    <comment>Edit a task</comment>
  </data>
  <data name="EditFlyoutImagePath" xml:space="preserve">
    <value>(Optional) Image or Video Path:</value>
    <comment>file path</comment>
  </data>
  <data name="EditFlyoutTextHeaderEditingCMD" xml:space="preserve">
    <value>Editing Batch File Task</value>
  </data>
  <data name="EditFlyoutTextHeaderEditingExe" xml:space="preserve">
    <value>Editing Executable Task</value>
  </data>
  <data name="EditFlyoutTextHeaderEditingExternal" xml:space="preserve">
    <value>Editing External Task</value>
  </data>
  <data name="EditFlyoutTextHeaderEditingPS" xml:space="preserve">
    <value>Editing PowerShell Task</value>
  </data>
  <data name="EditFlyoutTextHeaderEditingTAEF" xml:space="preserve">
    <value>Editing TAEF Test</value>
  </data>
  <data name="EditFlyoutTextHeaderEditingUWP" xml:space="preserve">
    <value>Editing UWP Task</value>
  </data>
  <data name="EditingTaskList" xml:space="preserve">
    <value>Editing TaskList</value>
  </data>
  <data name="EditListNameButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Rename TaskList</value>
  </data>
  <data name="EditListNameButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Rename TaskList</value>
  </data>
  <data name="EnableAndRetry" xml:space="preserve">
    <value>Please enable {0} and try again.</value>
  </data>
  <data name="EndComments" xml:space="preserve">
    <value>End Comments</value>
    <comment>End of user comments</comment>
  </data>
  <data name="ExistingText.Text" xml:space="preserve">
    <value>Existing TaskLists:</value>
  </data>
  <data name="ExistingText2.Text" xml:space="preserve">
    <value>Existing TaskLists are loaded every boot unless deleted. They can also be manually exported to a FactoryOrchestratorXML file.</value>
  </data>
  <data name="Exit.Text" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="ExitCodeConst.Text" xml:space="preserve">
    <value>Exit Code:</value>
  </data>
  <data name="ExitSymbol.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Exit and shutdown menu</value>
  </data>
  <data name="ExitText.Text" xml:space="preserve">
    <value>Exit Factory Orchestrator?</value>
  </data>
  <data name="FactoryOrchestrator.Text" xml:space="preserve">
    <value>Factory Orchestrator</value>
    <comment>Do not localize</comment>
  </data>
  <data name="FactoryReset" xml:space="preserve">
    <value>Factory Reset</value>
  </data>
  <data name="FailButton.Content" xml:space="preserve">
    <value>Fail ❌</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>❌ Failed</value>
  </data>
  <data name="FailedAppsQuery" xml:space="preserve">
    <value>Failed to query apps</value>
  </data>
  <data name="FailedQuery" xml:space="preserve">
    <value>Failed to query TaskList for edit</value>
  </data>
  <data name="FailedToLaunch" xml:space="preserve">
    <value>Failed to launch</value>
  </data>
  <data name="Files.Content" xml:space="preserve">
    <value>Transfer Files</value>
  </data>
  <data name="Files.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Transfer file to/from connected device</value>
  </data>
  <data name="Folder" xml:space="preserve">
    <value>folder as TaskList</value>
  </data>
  <data name="FOXML" xml:space="preserve">
    <value>FactoryOrchestratorXML file</value>
  </data>
  <data name="FOXMLSaveFailed" xml:space="preserve">
    <value>Failed to save FactoryOrchestratorXML file</value>
  </data>
  <data name="GetText.Text" xml:space="preserve">
    <value>Get Remote File/Folder</value>
  </data>
  <data name="GetTextContainer.Text" xml:space="preserve">
    <value>Get Container File/Folder</value>
  </data>
  <data name="HeaderGet.Text" xml:space="preserve">
    <value>Copy from remote device to local device?</value>
  </data>
  <data name="HeaderGetContainer.Text" xml:space="preserve">
    <value>Copy from local device to container?</value>
  </data>
  <data name="HeaderSend.Text" xml:space="preserve">
    <value>Copy from local device to remote device?</value>
  </data>
  <data name="HeaderSendContainer.Text" xml:space="preserve">
    <value>Copy from container to local device?</value>
  </data>
  <data name="ImportText.Text" xml:space="preserve">
    <value>Import FactoryOrchestratorXML File:</value>
  </data>
  <data name="IpAddress.Text" xml:space="preserve">
    <value>IP Address:</value>
  </data>
  <data name="IpHeader.Text" xml:space="preserve">
    <value>System Ip Addresses</value>
  </data>
  <data name="LastTimeRunConst.Text" xml:space="preserve">
    <value>Started at:</value>
  </data>
  <data name="LaunchApp.Text" xml:space="preserve">
    <value>Launch installed app package (exit with ALT+F4):</value>
  </data>
  <data name="LoadFailed" xml:space="preserve">
    <value>Failed to load</value>
  </data>
  <data name="LoadFolderFlyoutText" xml:space="preserve">
    <value>Folder to load as TaskList:</value>
  </data>
  <data name="LoadFolderText.Text" xml:space="preserve">
    <value>Load Folder as TaskList (exe, cmd, ps1, TAEF):</value>
  </data>
  <data name="LoadXMLFlyoutText" xml:space="preserve">
    <value>FactoryOrchestratorXML file to load from:</value>
  </data>
  <data name="LocalDevice" xml:space="preserve">
    <value>Local Device</value>
  </data>
  <data name="LogPathConst.Text" xml:space="preserve">
    <value>Log:</value>
  </data>
  <data name="MaybeDeleted" xml:space="preserve">
    <value>It may have been deleted.</value>
  </data>
  <data name="NetworkButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Network information</value>
  </data>
  <data name="NewCMDButton.Content" xml:space="preserve">
    <value>New Command Line File Task</value>
    <comment>button to create a new command line file task (batch file on windows, shell script on linux)</comment>
  </data>
  <data name="NewExecutableButton.Content" xml:space="preserve">
    <value>New Executable Task</value>
  </data>
  <data name="NewExternalButton.Content" xml:space="preserve">
    <value>New External Task</value>
  </data>
  <data name="NewPSButton.Content" xml:space="preserve">
    <value>New PowerShell Task</value>
  </data>
  <data name="NewTAEFButton.Content" xml:space="preserve">
    <value>New TAEF Task</value>
  </data>
  <data name="NewText.Text" xml:space="preserve">
    <value>Create new TaskList:</value>
  </data>
  <data name="NewUWPButton.Content" xml:space="preserve">
    <value>New UWP App Task</value>
  </data>
  <data name="NextText.Text" xml:space="preserve">
    <value>Next Run</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NoContainerContent" xml:space="preserve">
    <value>Returning to last page</value>
  </data>
  <data name="NoContainerTitle" xml:space="preserve">
    <value>Container is no longer running</value>
  </data>
  <data name="NotRun" xml:space="preserve">
    <value>❔ Not Run</value>
  </data>
  <data name="OEMVersion" xml:space="preserve">
    <value>OEM Version</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="OnRetry" xml:space="preserve">
    <value>
On retry</value>
    <comment>Used in sentences like "passed on retry 5", ie it happened on the 5th retry of an action.</comment>
  </data>
  <data name="OSSAcknowledgments.Text" xml:space="preserve">
    <value>Open Source Software Acknowledgments</value>
  </data>
  <data name="OSVersion" xml:space="preserve">
    <value>OS Version</value>
  </data>
  <data name="OutputConst.Text" xml:space="preserve">
    <value>Console Output:</value>
  </data>
  <data name="OutputStack.Text" xml:space="preserve">
	<value>Console Output</value>
	<comment>Console to dispaly command output.</comment>
  </data>
  <data name="OverallTaskResultConst.Text" xml:space="preserve">
    <value>Status:</value>
  </data>
  <data name="ParallelCheck.Content" xml:space="preserve">
    <value>Run Tasks in Parallel?</value>
  </data>
  <data name="PassButton.Content" xml:space="preserve">
    <value>Pass ✔️</value>
  </data>
  <data name="Passed" xml:space="preserve">
    <value>✔ Passed</value>
  </data>
  <data name="Path" xml:space="preserve">
    <value>Path:</value>
    <comment>file path</comment>
  </data>
  <data name="PauseListButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Pause TaskList</value>
  </data>
  <data name="PauseListButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="PrevText.Text" xml:space="preserve">
    <value>Previous Run</value>
  </data>
  <data name="RebootButtonText.Text" xml:space="preserve">
    <value>Reboot</value>
  </data>
  <data name="RemoteHost.Text" xml:space="preserve">
    <value>or please select the device you wish to connect to:</value>
  </data>
  <data name="RenameListBlock.Text" xml:space="preserve">
    <value>Rename TaskList</value>
  </data>
  <data name="ReorderFailed" xml:space="preserve">
    <value>Failed to reorder TaskLists</value>
  </data>
  <data name="RerunListButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Rerun TaskList</value>
  </data>
  <data name="RerunListButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Rerun TaskList</value>
  </data>
  <data name="RestartListButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Restart TaskList</value>
  </data>
  <data name="RestartListButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Restart</value>
  </data>
  <data name="ResumeListButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Resume TaskList</value>
  </data>
  <data name="ResumeListButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Resume</value>
  </data>
  <data name="Retry" xml:space="preserve">
    <value>Retry</value>
    <comment>Used in sentences like "running retry 5", ie the 5th retry of an action.</comment>
  </data>
  <data name="RetryBlock.Text" xml:space="preserve">
    <value>Maximum number of retries:</value>
  </data>
  <data name="RetryTaskButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Rerun Task</value>
  </data>
  <data name="RetryTaskButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Rerun Task</value>
  </data>
  <data name="Run.Content" xml:space="preserve">
    <value>Run TaskLists</value>
  </data>
  <data name="RunAllButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Run all TaskLists</value>
  </data>
  <data name="RunAllButton.Content" xml:space="preserve">
    <value>Run all</value>
  </data>
  <data name="RunAllButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Run all TaskLists</value>
  </data>
  <data name="RunCommandButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Execute command</value>
  </data>
  <data name="RunCommandButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Execute command</value>
  </data>
  <data name="RunListButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Run TaskList</value>
  </data>
  <data name="RunListButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Run</value>
  </data>
  <data name="Running" xml:space="preserve">
    <value>▶ Running</value>
  </data>
  <data name="RunPending" xml:space="preserve">
    <value>⏳ Run Pending</value>
  </data>
  <data name="RunTimeConst.Text" xml:space="preserve">
    <value>Run Time:</value>
  </data>
  <data name="Save.Content" xml:space="preserve">
    <value>Manage TaskLists</value>
  </data>
  <data name="Save.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Create or edit a TaskList</value>
  </data>
  <data name="SaveAll.Text" xml:space="preserve">
    <value>Save All TaskLists to File</value>
  </data>
  <data name="SaveFlyoutTextHeader.Text" xml:space="preserve">
    <value>File to save as:</value>
  </data>
  <data name="SaveTaskListContent" xml:space="preserve">
    <value>Do you want to save your changes?</value>
  </data>
  <data name="SaveTaskListTitle" xml:space="preserve">
    <value>Save TaskList?</value>
  </data>
  <data name="SendText.Text" xml:space="preserve">
    <value>Send Local File/Folder</value>
  </data>
  <data name="ServerText.Text" xml:space="preserve">
    <value>Remote File/Folder:</value>
  </data>
  <data name="ServerTextContainer.Text" xml:space="preserve">
    <value>Container File/Folder:</value>
  </data>
  <data name="ServiceVersion" xml:space="preserve">
    <value>Service Version</value>
  </data>
  <data name="ShutdownButtonText.Text" xml:space="preserve">
    <value>Shutdown</value>
  </data>
  <data name="SourceFileHeaderGet.Text" xml:space="preserve">
    <value>Source File (from remote device):</value>
  </data>
  <data name="SourceFileHeaderSend.Text" xml:space="preserve">
    <value>Source File (from local device):</value>
  </data>
  <data name="StartComments" xml:space="preserve">
    <value>Start Comments</value>
    <comment>Start of user comments</comment>
  </data>
  <data name="TargetFileHeaderGet.Text" xml:space="preserve">
    <value>Destination (on local device):</value>
  </data>
  <data name="TargetFileHeaderSend.Text" xml:space="preserve">
    <value>Destination (on remote device):</value>
  </data>
  <data name="TaskGuidConst.Text" xml:space="preserve">
    <value>Task Guid:</value>
  </data>
  <data name="TaskListInvalidNameContent" xml:space="preserve">
    <value>The TaskList name must not be empty!</value>
  </data>
  <data name="TaskListInvalidNameTitle" xml:space="preserve">
    <value>Invalid TaskList Name</value>
  </data>
  <data name="TaskListOpt.Text" xml:space="preserve">
    <value>TaskList Options:</value>
  </data>
  <data name="TaskListSaveFailed" xml:space="preserve">
    <value>Failed to save TaskList</value>
  </data>
  <data name="TaskListsText.Text" xml:space="preserve">
    <value>TaskLists</value>
  </data>
  <data name="TaskName.Text" xml:space="preserve">
    <value>Task Name:</value>
  </data>
  <data name="ExitButton.AutomationProperties.Name" xml:space="preserve">
    <value>Exit menu</value>
    <comment>Accessibility info for exit menu on connection page</comment>
  </data>
  <data name="ConfirmExit.AutomationProperties.Name" xml:space="preserve">
    <value>Exit</value>
    <comment>Accessibility info for exit button in exit menu</comment>
  </data>
  <data name="TaskPath.Text" xml:space="preserve">
    <value>Task Path:</value>
  </data>
  <data name="TaskRunGuidConst.Text" xml:space="preserve">
    <value>TaskRun Guid:</value>
  </data>
  <data name="TasksHeader.Text" xml:space="preserve">
    <value>Tasks:</value>
  </data>
  <data name="TasksText.Text" xml:space="preserve">
    <value>Tasks</value>
  </data>
  <data name="TerminateBgTasksCheck.Content" xml:space="preserve">
    <value>Terminate Background Tasks on Completion?</value>
  </data>
  <data name="TerminateOnCompleteCheck.Content" xml:space="preserve">
    <value>Terminate App on Completion?</value>
  </data>
  <data name="TimedOut" xml:space="preserve">
    <value>⏱ Timed-out</value>
  </data>
  <data name="TimeoutBlock.Text" xml:space="preserve">
    <value>Timeout (seconds):</value>
  </data>
  <data name="TotalRuns" xml:space="preserve">
    <value>total runs</value>
    <comment>The total number of times a "run" (of a test) has happened, ie "5 total runs".</comment>
  </data>
  <data name="SettingsButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Settings</value>
    <comment>Factory Orchestrator App Settings</comment>
  </data>
  <data name="SettingsTrackExecution.Content" xml:space="preserve">
    <value>Follow TaskList Execution</value>
    <comment>Checkbox to automatically update the UI  to follow the running Task(s)</comment>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>❔ Unknown</value>
  </data>
  <data name="UWPArguments" xml:space="preserve">
    <value>Arguments (NOT passed to app, reference only):</value>
  </data>
  <data name="ValidateXMLButton.Content" xml:space="preserve">
    <value>Validate FactoryOrchestratorXML</value>
  </data>
  <data name="WDP.Content" xml:space="preserve">
    <value>Windows Device Portal</value>
    <comment>Do not localize</comment>
  </data>
  <data name="WDP.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Launch Windows Device Portal</value>
  </data>
  <data name="WDPFailedContent" xml:space="preserve">
    <value>Make sure Windows Device Portal is running and supports HTTP with no authentication, then try again.</value>
  </data>
  <data name="WDPFailedTitle" xml:space="preserve">
    <value>Failed to launch Windows Device Portal</value>
  </data>
  <data name="Welcome.Text" xml:space="preserve">
    <value>Welcome to Factory Orchestrator!</value>
  </data>
  <data name="XmlFailedTitle" xml:space="preserve">
    <value>FactoryOrchestratorXML failed validation!</value>
  </data>
  <data name="XmlValidatedContent" xml:space="preserve">
    <value>{0} is valid FactoryOrchestratorXML.</value>
  </data>
  <data name="XmlValidatedTitle" xml:space="preserve">
    <value>FactoryOrchestratorXML successfully validated!</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="ContainerGuiWarning.Text" xml:space="preserve">
    <value>⚠ To use the console to run Win32 GUI programs in the container, the exe name must be preceeded by RunAsRDUser.exe and use the full path to the exe ⚠</value>
    <comment>Warning shown if user is using the console to run executables inside the container</comment>
  </data>
  <data name="ContainerGuiWarningExample.Text" xml:space="preserve">
    <value>For example: RunAsRDUser.exe c:\windows\regedit.exe</value>
    <comment>Example of how to run win32 gui executables inside the container</comment>
  </data>
  <data name="ContainerSupport.Text" xml:space="preserve">
    <value>Container Support Enabled</value>
    <comment>text field showing if the Service allows container support.</comment>
  </data>
  <data name="ContainerRunning.Text" xml:space="preserve">
    <value>Container Running</value>
    <comment>text field showing if the Service has a container running.</comment>
  </data>
  <data name="NetworkAccess.Text" xml:space="preserve">
    <value>Network Access Allowed</value>
    <comment>text field showing if the Service allows network connections.</comment>
  </data>
  <data name="ServiceInformation.Text" xml:space="preserve">
    <value>Factory Orchestrator Service Information</value>
    <comment>text field header for showing info that relate to what features are enabled / disabled in the Service.</comment>
  </data>
  <data name="LaunchRD.Content" xml:space="preserve">
    <value>Show Container UI (exit with ALT+F4)</value>
    <comment>button to launch remote desktop uwp app &amp; auto connect to the running container</comment>
  </data>
  <data name="CertHash.Text" xml:space="preserve">
    <value>Certificate Hash:</value>
    <comment>Hash value of the Certificate of the target machine.</comment>
  </data>
  <data name="ServerName.Text" xml:space="preserve">
    <value>Server Identity:</value>
    <comment>Distinguished Name of the target machine.</comment>
  </data>
  <data name="Hostname.Text" xml:space="preserve">
    <value>System Hostname:</value>
    <comment>The PC's hostname</comment>
  </data>
  <data name="HelpButton.Content" xml:space="preserve">
    <value>View the Factory Orchestrator documentation online</value>
    <comment>Button to open factory orchestrator documentation website in user's web browser</comment>
  </data>
  <data name="SettingsHeader.Text" xml:space="preserve">
    <value>App settings</value>
    <comment>Header for settings related to this app</comment>
  </data>
  <data name="SettingsShowExternalTasks.Content" xml:space="preserve">
    <value>Show External Task UI</value>
    <comment>checkbox setting to enable or disable the page shown when an external task is run</comment>
  </data>
  <data name="SettingsSubheader.Content" xml:space="preserve">
    <value>See documentation for more details</value>
    <comment>Hyperlink to website with more details about app settings</comment>
  </data>
  <data name="WdpNotice.Text" xml:space="preserve">
    <value>Due to limitations in UWPs, you cannot perform certain actions, like close an app.</value>
    <comment>Part 1 of 3 part textblock telling user the app cannot fully interact with windows device portal due to webview limitations</comment>
  </data>
  <data name="WdpNotice2.Text" xml:space="preserve">
    <value>If you have a web browser installed, click</value>
    <comment>Part 2 of 3 part textblock telling user the app cannot fully interact with windows device portal due to webview limitations</comment>
  </data>
  <data name="WdpNotice3.Text" xml:space="preserve">
    <value>to launch WDP in it.</value>
    <comment>Part 3 of 3 part textblock telling user the app cannot fully interact with windows device portal due to webview limitations</comment>
  </data>
  <data name="ConnectingProgress.AutomationProperties.Name" xml:space="preserve">
    <value>Connection in progress</value>
    <comment>Progress bar showing connection to factory orchestrator service progress.</comment>
  </data>
</root>
