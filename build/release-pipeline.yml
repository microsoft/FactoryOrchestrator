#Multi-configuration and multi-agent job options are not exported to YAML. Configure these options using documentation guidance: https://docs.microsoft.com/vsts/pipelines/process/phases
resources:
  repositories:
  - repository: ComplianceRepo
    type: github
    endpoint: ComplianceGHRepo
    name: PowerShell/compliance
    ref: master

variables:
  ${{ if or(startsWith(variables['Build.SourceBranchName'], 'OSBuild'), eq(variables['Build.SourceBranchName'], 'main')) }}:
    VERSIONSUFFIX: ''
    VERSIONSUFFIXVPACK: ''
    VERSIONSUFFIXDOTNET: ' '
    SKIPSIGNING: 'false'
  ${{ if not(or(startsWith(variables['Build.SourceBranchName'], 'OSBuild'), eq(variables['Build.SourceBranchName'], 'main'))) }}:
    VERSIONSUFFIX: '$(Build.SourceBranchName)'
    VERSIONSUFFIXVPACK: '-$(Build.SourceBranchName)'
    VERSIONSUFFIXDOTNET: '--version-suffix $(Build.SourceBranchName)'
    SKIPSIGNING: 'true'

name: $(BuildDefinitionName)_$(date:yyMM).$(date:dd)$(rev:rrr)

stages:
  - stage: 'Build_Test_FactoryOrchestrator_Windows'
    pool:
      name: "Hosted Windows 2019 with VS2019"
      demands:
      - msbuild
      - visualstudio

    jobs:
    - job: "Build_Test_FactoryOrchestrator_Service"
      variables: 
        BuildConfiguration: 'Release'
        BuildPlatform: 'AnyCPU'
      steps:
      - checkout: self
      - checkout: ComplianceRepo
      - template: ./templates/template-set-build-version.yml
      - template: ./templates/template-build-test-service.yml
      - template: ./templates/template-build-service-windows-runtimes.yml
      - publish: '$(Build.ARTIFACTSTAGINGDIRECTORY)\bin\$(BuildConfiguration)\$(BuildPlatform)'
        artifact: 'UnsignedBin_$(BuildConfiguration)_$(BuildPlatform)'

    - job: "Build_FactoryOrchestrator_App"
      strategy:
        matrix:
          Release_x86:
            BuildPlatform: 'x86'
            BuildConfiguration: 'Release'
          Release_x64:
            BuildPlatform: 'x64'
            BuildConfiguration: 'Release'
          Release_Arm:
            BuildPlatform: 'ARM'
            BuildConfiguration: 'Release'
        maxParallel: '3'
      steps:
      - template: ./templates/template-set-build-version.yml
      - download: current
        artifact: UnsignedBin_$(BuildConfiguration)_AnyCPU
      - task: CopyFiles@2
        inputs:
          sourceFolder: "$(Pipeline.Workspace)/UnsignedBin_$(BuildConfiguration)_AnyCPU"
          targetFolder: "$(Build.ARTIFACTSTAGINGDIRECTORY)/bin/Release/AnyCPU"
      - template: ./templates/template-build-app.yml
      - publish: '$(Build.ARTIFACTSTAGINGDIRECTORY)\bin\$(BuildConfiguration)\$(BuildPlatform)'
        artifact: 'UnsignedBin_$(BuildConfiguration)_$(BuildPlatform)'
      - publish: '$(System.DefaultWorkingDirectory)\src\UWPClientLibrary\obj\$(BuildConfiguration)\*.nuspec'
        artifact: 'UWPClient_Nuspecs'
      condition: eq(variables['BuildPlatform'], 'x86')

    - job: "Build_Docs_Check_For_Changes"
      steps:
      - template: ./templates/template-set-build-version.yml
      - template: ./templates/template-checkdocs.yml

  - stage: 'Sign_Binaries'
    pool:
      name: "Hosted Windows 2019 with VS2019"
      demands:
      - msbuild
      - visualstudio
    dependsOn:
    - 'Build_Test_FactoryOrchestrator_Windows'
    jobs:
      - job: 'Sign_Windows'
        steps:
        - template: ./templates/template-set-build-version.yml
        - download: current
          artifact: UnsignedBin_*
        - task: CopyFiles@2
          inputs:
            sourceFolder: "$(Pipeline.Workspace)/UnsignedBin_$(BuildConfiguration)_AnyCPU"
            targetFolder: "$(Build.ARTIFACTSTAGINGDIRECTORY)/bin/Release/AnyCPU"
        - task: CopyFiles@2
          inputs:
            sourceFolder: "$(Pipeline.Workspace)/UnsignedBin_$(BuildConfiguration)_x86"
            targetFolder: "$(Build.ARTIFACTSTAGINGDIRECTORY)/bin/Release/x86"
        - task: CopyFiles@2
          inputs:
            sourceFolder: "$(Pipeline.Workspace)/UnsignedBin_$(BuildConfiguration)_x64"
            targetFolder: "$(Build.ARTIFACTSTAGINGDIRECTORY)/bin/Release/x64"
        - task: CopyFiles@2
          inputs:
            sourceFolder: "$(Pipeline.Workspace)/UnsignedBin_$(BuildConfiguration)_ARM"
            targetFolder: "$(Build.ARTIFACTSTAGINGDIRECTORY)/bin/Release/ARM"
        - template: ./templates/template-sign-binaries-windows.yml
        - publish: '$(Build.ARTIFACTSTAGINGDIRECTORY)\signedbin'
          artifact: 'SignedBin_$(BuildConfiguration)_AllPlatforms'

  - stage: compliance
    displayName: Compliance
    dependsOn:
    - 'Sign_Binaries'
    jobs:
      - job: Compliance_Job
        pool:
          name: Package ES Standard Build
        steps:
        - checkout: self
          clean: true
        
        - checkout: ComplianceRepo
          clean: true
        
        - template: ./templates/template-set-build-version.yml

        - task: PkgESSetupBuild@10
          displayName: 'Package ES - Setup Build'
          inputs:
            branchVersion: true
            branchVersionExcludeBranch: 'main'
            productName: 'FactoryOrchestrator'
            disableOutputRedirect: true
            disableMsbuildVersion: true
            useDfs: false

        - powershell: |
            Get-Item -Path env:* | Sort-Object Name
          displayName: "Print all variables"

        - download: 'current'
          artifact: 'SignedBin_Release_AllPlatforms'

        - template: assembly-module-compliance.yml@ComplianceRepo
          parameters:
            # binskim
            AnalyzeTarget: '$(Pipeline.Workspace)/SignedBin_Release_AllPlatforms/**/*.dll;$(Pipeline.Workspace)/SignedBin_Release_AllPlatforms/**/*.exe'
            AnalyzeSymPath: 'SRV*'
            # component-governance
            sourceScanPath: '$(Build.SourcesDirectory)/src'
            # credscan
            suppressionsFile: 'build/config/CredScanSuppressions.json'
            # TermCheck
            optionsRulesDBPath: ''
            optionsFTPath: ''
            # tsa-upload
            codeBaseName: 'FactoryOrchestrator'
            # API Scan
            softwareFolder: '$(Pipeline.Workspace)/SignedBin_Release_AllPlatforms'
            softwareName: 'FactoryOrchestrator'
            softwareVersion: '$(VERSIONPREFIX)$(VERSIONSUFFIXVPACK)'
            APIScan: true # set to false when not using Windows APIs.

        - task: PkgESLateTasks@10
          displayName: 'PkgES Finalize and Cleanup'

  - stage: 'Sign_Publish_NuGet'
    dependsOn:
    - 'compliance'
    pool:
      name: "Hosted Windows 2019 with VS2019"
      demands:
      - msbuild
      - visualstudio
    jobs:
      - job: Sign_Publish_NuGet
        steps:
        - checkout: self
          clean: true
        
        - template: ./templates/template-set-build-version.yml

        - powershell: |
            Get-Item -Path env:* | Sort-Object Name
          displayName: "Print all variables"

        - download: 'current'
          artifact: 'SignedBin_$(BuildConfiguration)_AllPlatforms'

        - download: 'current'
          artifact: 'UWPClient_Nuspecs'

        - task: CopyFiles@2
          inputs:
            sourceFolder: "$(Pipeline.Workspace)/SignedBin_$(BuildConfiguration)_AllPlatforms"
            targetFolder: "$(Build.ARTIFACTSTAGINGDIRECTORY)/bin/$(BuildConfiguration)/"

        - template: ./templates/template-sign-publish-nuget.yml

  - stage: 'Publish_vPack'
    dependsOn:
    - 'compliance'
    pool:
      name: Package ES Standard Build
    jobs:
      - job: Publish_vPacks
        steps:
        - checkout: self
          clean: true    

        - task: PkgESSetupBuild@10
          displayName: 'Package ES - Setup Build'
          inputs:
            branchVersion: true
            branchVersionExcludeBranch: 'main'
            productName: 'FactoryOrchestrator'
            disableOutputRedirect: true
            disableMsbuildVersion: true
        
        - template: ./templates/template-set-build-version.yml

        - powershell: |
            Get-Item -Path env:* | Sort-Object Name
          displayName: "Print all variables"

        - download: 'current'
          artifact: 'SignedBin_$(BuildConfiguration)_AllPlatforms'

        - task: CopyFiles@2
          inputs:
            sourceFolder: "$(Pipeline.Workspace)/SignedBin_$(BuildConfiguration)_AllPlatforms"
            targetFolder: "$(Build.ARTIFACTSTAGINGDIRECTORY)/bin/$(BuildConfiguration)/"

        - template: ./templates/template-publish-vpack-service.yml

        - template: ./templates/template-publish-vpack-other.yml

        - publish: '$(Build.ARTIFACTSTAGINGDIRECTORY)\VPackManifests'
          artifact: VPackManifests

        - task: PkgESLateTasks@10
          displayName: 'PkgES Finalize and Cleanup'
