steps:
- task: PowerShell@2
  displayName: 'Create NET Core Test Files Zip'
  inputs:
    targetType: filePath
    filePath: ./build/internal/CreateTestZip.ps1
    arguments: '-TestBinRoot $(Build.ARTIFACTSTAGINGDIRECTORY)\bin\tests\$(BuildConfiguration)\AnyCPU\ -OutFolder $(Build.ARTIFACTSTAGINGDIRECTORY)\bin\Tests\TestZip'
    failOnStderr: true
  timeoutInMinutes: 5

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish FactoryOrchestratorClient PowerShell'
  inputs:
    command: publish
    publishWebProjects: False
    arguments: '$(Build.SourcesDirectory)\src\PowerShellLibrary\FactoryOrchestratorPowerShellLibrary.csproj -p:SolutionDir=$(Build.SourcesDirectory)\src --configuration $(BuildConfiguration) --output $(Build.ARTIFACTSTAGINGDIRECTORY)\bin\$(BuildConfiguration)\AnyCPU\FactoryOrchestratorPowerShellLibrary_Publish --verbosity Detailed --no-build'
    zipAfterPublish: false
  enabled: true

- task: CopyFiles@2
  displayName: 'Copy Client Libraries to root of drop'
  inputs:
    SourceFolder: '$(Build.ARTIFACTSTAGINGDIRECTORY)\bin\$(BuildConfiguration)\AnyCPU\FactoryOrchestratorUWPClientLibrary'
    TargetFolder: '$(Build.ARTIFACTSTAGINGDIRECTORY)\ClientLibraries'
  condition: and(succeeded(), eq(variables['XES_SERIALPOSTBUILDREADY'], 'True'))

- task: CopyFiles@2
  displayName: 'Copy NOTICE to Client Libraries'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: 'NOTICE.txt'
    TargetFolder: '$(Build.ARTIFACTSTAGINGDIRECTORY)\ClientLibraries'
  condition: and(succeeded(), eq(variables['XES_SERIALPOSTBUILDREADY'], 'True'))

- task: CopyFiles@2
  displayName: 'Copy XSD to Client Libraries'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\src\CoreLibrary'
    Contents: 'FactoryOrchestratorXML.xsd'
    TargetFolder: '$(Build.ARTIFACTSTAGINGDIRECTORY)\ClientLibraries'
  condition: and(succeeded(), eq(variables['XES_SERIALPOSTBUILDREADY'], 'True'))

- task: CopyFiles@2
  displayName: 'Copy PowerShell Publish to Client Libraries'
  inputs:
    SourceFolder: '$(Build.ARTIFACTSTAGINGDIRECTORY)\bin\$(BuildConfiguration)\AnyCPU\FactoryOrchestratorPowerShellLibrary_Publish'
    TargetFolder: '$(Build.ARTIFACTSTAGINGDIRECTORY)\ClientLibraries\PowerShell'
  condition: and(succeeded(), eq(variables['XES_SERIALPOSTBUILDREADY'], 'True'))

- task: PkgESVPack@10
  env:
   SYSTEM_ACCESSTOKEN: $(System.AccessToken)
  displayName: 'PkgES Create VPack Client Libraries'
  inputs:
    sourceDirectory: '$(Build.ARTIFACTSTAGINGDIRECTORY)\ClientLibraries'
    pushPkgName: 'FactoryOrchestrator.ClientLibraries$(VPACKNAME)'
    description: 'FactoryOrchestrator.ClientLibraries$(VPACKNAME)'
    version: '$(VPACKVERSION)'
  condition: and(succeeded(), ne(variables['skipvpack'], 'true'))
  enabled: true

- task: CopyFiles@2
  displayName: 'Copy VPack Manifest Client Libraries'
  inputs:
    SourceFolder: '$(XES_VPACKMANIFESTDIRECTORY)'
    Contents: '$(XES_VPACKMANIFESTNAME)'
    TargetFolder: '$(Build.ARTIFACTSTAGINGDIRECTORY)\VPackManifests'
  condition: and(succeeded(), ne(variables['skipvpack'], 'true'))

- task: CopyFiles@2
  displayName: 'Copy Client Sample source'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\src\ClientSample'
    Contents: |
     **\*.cs
     **\*.csproj
    TargetFolder: '$(Build.ARTIFACTSTAGINGDIRECTORY)\ClientSampleWSK'
  condition: and(succeeded(), eq(variables['XES_SERIALPOSTBUILDREADY'], 'True'))

- task: PowerShell@2
  displayName: 'Modify Client Sample for WSK'
  inputs:
    targetType: filePath
    filePath: ./build/internal/UpdateClientSampleForWSK.ps1
    arguments: '-ProjectFolder $(Build.ARTIFACTSTAGINGDIRECTORY)\ClientSampleWSK'
    failOnStderr: true
  condition: and(succeeded(), eq(variables['XES_SERIALPOSTBUILDREADY'], 'True'))
  timeoutInMinutes: 5

- task: PkgESVPack@10
  env:
   SYSTEM_ACCESSTOKEN: $(System.AccessToken)
  displayName: 'PkgES Create VPack Client Sample WSK'
  inputs:
    sourceDirectory: '$(Build.ARTIFACTSTAGINGDIRECTORY)\ClientSampleWSK'
    pushPkgName: 'FactoryOrchestrator.ClientSampleWSK$(VPACKNAME)'
    description: 'FactoryOrchestrator.ClientSampleWSK$(VPACKNAME)'
    version: '$(VPACKVERSION)'
  condition: and(succeeded(), ne(variables['skipvpack'], 'true'))
  enabled: true

- task: CopyFiles@2
  displayName: 'Copy VPack Manifest Client Sample'
  inputs:
    SourceFolder: '$(XES_VPACKMANIFESTDIRECTORY)'
    Contents: '$(XES_VPACKMANIFESTNAME)'
    TargetFolder: '$(Build.ARTIFACTSTAGINGDIRECTORY)\VPackManifests'
  condition: and(succeeded(), ne(variables['skipvpack'], 'true'))

- task: PkgESVPack@10
  env:
   SYSTEM_ACCESSTOKEN: $(System.AccessToken)
  displayName: 'PkgES Create VPack NET Core Tests'
  inputs:
    sourceDirectory: '$(XES_DFSDROP)\Tests\TestZip'
    pushPkgName: 'FactoryOrchestrator.NetCoreTests$(VPACKNAME)'
    description: 'FactoryOrchestrator.NetCoreTests$(VPACKNAME)'
    version: '$(VPACKVERSION)'
  condition: and(succeeded(), ne(variables['skipvpack'], 'true'))
  enabled: true

- task: CopyFiles@2
  displayName: 'Copy VPack Manifest NET Core Tests'
  inputs:
    SourceFolder: '$(XES_VPACKMANIFESTDIRECTORY)'
    Contents: '$(XES_VPACKMANIFESTNAME)'
    TargetFolder: '$(Build.ARTIFACTSTAGINGDIRECTORY)\VPackManifests'
  condition: and(succeeded(), ne(variables['skipvpack'], 'true'))
