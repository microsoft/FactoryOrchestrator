# Signs all Windows binaries. Requires unsigned binaries published to UnsignedBin_Windows_$(BuildConfiguration)_$(BuildPlatform).
parameters:
  - name: "UnsignedInput"
    default: "$(Build.ARTIFACTSTAGINGDIRECTORY)/unsignedbin/"
  - name: "SignedOutput"
    default: "$(Build.ArtifactStagingDirectory)/signedbin/"
  - name: "ShouldSign"
    default: "false"
steps:
# uniqify binaries to prevent over-signing
- task: PowerShell@2
  inputs:
    targetType: filePath
    filePath: $(FORepoRoot)/build/internal/CopyUniqueBins.ps1
    arguments: '-SearchPath "${{ parameters.UnsignedInput }}" -CopyDestination "$(System.DefaultWorkingDirectory)/unsigneduniquefiles/" -MappingFileOut "$(System.DefaultWorkingDirectory)/mappingfile.xml"'
    failOnStderr: true
    pwsh: true
  displayName: 'Copy unique files to staging directory'

# Per ESRP wiki, files are scanned for malware during signing.

# ​​CP-230012 is for Microsoft authored binaries. Authenticode signing.
- template: EsrpSign.yml@ComplianceRepo
  parameters:
    # the folder which contains the binaries to sign
    buildOutputPath: '$(System.DefaultWorkingDirectory)/unsigneduniquefiles/'
    # the location to put the signed output
    signOutputPath: '$(System.DefaultWorkingDirectory)/signeduniquefiles/'
    # the certificate ID to use
    certificateId: "​​CP-230012"
    # The file pattern to use
    # If not using minimatch: comma separated, with * supported
    # If using minimatch: newline separated, with !, **, and * supported.
    # See link in the useMinimatch comments.
    pattern: |
      '**/Microsoft.FactoryOrchestrator*.dll'
      '**/Microsoft.FactoryOrchestrator*.exe'
    # decides if the task should use minimatch for the pattern matching.
    # https://github.com/isaacs/minimatch#features
    useMinimatch: true
    shouldSign: ${{ parameters.ShouldSign }}
    alwaysCopy: 'false'
    signingService: 'FactoryOrchestratorSigning'

# CP-231522​ is for 3rd party authored binaries (OSS).
- template: EsrpSign.yml@ComplianceRepo
  parameters:
    # the folder which contains the binaries to sign
    buildOutputPath: '$(System.DefaultWorkingDirectory)/unsigneduniquefiles/'
    # the location to put the signed output
    signOutputPath: '$(System.DefaultWorkingDirectory)/signeduniquefiles/'
    # the certificate ID to use
    certificateId: "CP-231522​"
    # The file pattern to use
    # If not using minimatch: comma separated, with * supported
    # If using minimatch: newline separated, with !, **, and * supported.
    # See link in the useMinimatch comments.
    pattern: |
      '**/JKang.*.dll'
      '**/PE-Utility.dll'
      '**/PeterKottas.*.dll'
      '**/DasMulli.*.dll'
    # decides if the task should use minimatch for the pattern matching.
    # https://github.com/isaacs/minimatch#features
    useMinimatch: true
    shouldSign: ${{ parameters.ShouldSign }}
    alwaysCopy: 'false'
    signingService: 'FactoryOrchestratorSigning'

# undo uniqify. The now signed files are copied to where they were found in ${{ parameters.UnsignedInput }}.
- task: PowerShell@2
  inputs:
    targetType: filePath
    filePath: $(FORepoRoot)/build/internal/CopyUniqueBins.ps1
    arguments: '-CopySource "$(System.DefaultWorkingDirectory)/signeduniquefiles/" -CopyDestination "${{ parameters.SignedOutput }}" -MappingFileIn "$(System.DefaultWorkingDirectory)/mappingfile.xml"'
    failOnStderr: true
    pwsh: true
  displayName: 'Copy signed, unique files to UnsignedInput directory'

# if not signing this copies the unsigned files. if signing, this will have the signed files due to CopyUniqueBins operation.
- task: CopyFiles@2
  inputs:
    sourceFolder: ${{ parameters.UnsignedInput }}
    targetFolder: ${{ parameters.SignedOutput }}
  displayName: "Copy files to output folder"

- publish: '$(SignedOutput)'
  artifact: 'SignedBin_Windows_$(BuildConfiguration)_AllPlatforms'
  displayName: 'Publish signed binaries - Windows'
