parameters:
  BuildConfiguration: 'Release'
  BuildPlatform: 'x86'
  VPackAppend: ''
# Publishes Service. Creates Service vPacks.
steps:
- task: PowerShell@2
  displayName: 'Create Microsoft.FactoryOrchestrator.Service Manifest for VPack'
  inputs:
    targetType: filePath
    filePath: ./build/internal/CreateServiceManifest.ps1
    arguments: '-PublishFolder "$(Build.ARTIFACTSTAGINGDIRECTORY)\bin\${{ parameters.BuildConfiguration }}\Publish\Microsoft.FactoryOrchestrator.Service.${{ parameters.BuildPlatform }}" -SourceRootFolder "`$(build.nttree)\$NtTreeRootFolder" -OutputFile "$(Build.ARTIFACTSTAGINGDIRECTORY)\bin\${{ parameters.BuildConfiguration }}\Publish\Microsoft.FactoryOrchestrator.Service.${{ parameters.BuildPlatform }}\Microsoft-OneCore-FactoryOrchestrator-Service-${{ parameters.BuildPlatform }}.wm.xml" -Owner "Microsoft" -Namespace "OneCore" -Name "FactoryOrchestrator-Service-${{ parameters.BuildPlatform }}" -DestinationRootFolder "`$(runtime.system32)\manufacturing\FactoryOrchestrator"'
    failOnStderr: true
    pwsh: true
  timeoutInMinutes: 5
- task: PkgESVPack@10
  env:
   SYSTEM_ACCESSTOKEN: $(System.AccessToken)
  displayName: 'PkgES Create VPack ${{ parameters.BuildPlatform }}'
  inputs:
    sourceDirectory: '$(Build.ARTIFACTSTAGINGDIRECTORY)\bin\${{ parameters.BuildConfiguration }}\Publish\Microsoft.FactoryOrchestrator.Service.${{ parameters.BuildPlatform }}'
    pushPkgName: 'FactoryOrchestrator.Service.${{ parameters.BuildPlatform }}'
    description: 'FactoryOrchestrator.Service.${{ parameters.BuildPlatform }}'
    version: '$(VERSIONPREFIX)$(VERSIONSUFFIXVPACK)${{ parameters.VPackAppend }}'
  condition: and(succeeded(), eq(variables['SHOULDPUSH'], 'true'))
- publish: '$(Build.ARTIFACTSTAGINGDIRECTORY)\bin\${{ parameters.BuildConfiguration }}\Publish\Microsoft.FactoryOrchestrator.Service.${{ parameters.BuildPlatform }}'
  artifact: 'Microsoft.FactoryOrchestrator.Service_${{ parameters.BuildPlatform }}'
  displayName: 'Publish Service SCD ${{ parameters.BuildPlatform }} artifact'
- task: CopyFiles@2
  displayName: 'Copy VPack Manifest Service ${{ parameters.BuildPlatform }}'
  inputs:
    SourceFolder: '$(XES_VPACKMANIFESTDIRECTORY)'
    Contents: '$(XES_VPACKMANIFESTNAME)'
    TargetFolder: '$(Build.ARTIFACTSTAGINGDIRECTORY)\VPackManifests'
  condition: and(succeeded(), eq(variables['SHOULDPUSH'], 'true'))
- task: CopyFiles@2
  displayName: 'Copy Service Manifest ${{ parameters.BuildPlatform }}'
  inputs:
    SourceFolder: '$(Build.ARTIFACTSTAGINGDIRECTORY)\bin\${{ parameters.BuildConfiguration }}\Publish\Microsoft.FactoryOrchestrator.Service.${{ parameters.BuildPlatform }}'
    Contents: 'Microsoft-OneCore-FactoryOrchestrator-Service-${{ parameters.BuildPlatform }}.wm.xml'
    TargetFolder: '$(Build.ARTIFACTSTAGINGDIRECTORY)\VPackManifests'
  condition: and(succeeded(), eq(variables['SHOULDPUSH'], 'true'))
