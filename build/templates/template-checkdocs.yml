# Copyright (c) Microsoft Corporation.
# Licensed under the MIT license.

# Runs mkdocs to check if docs need updating on gh-pages.
# Core and Client projects must be built for it to detect API changes.
steps:
- script: |
    cd $(FORepoRoot)
    mkdir $(Build.ArtifactStagingDirectory)\Patch
    pip install --upgrade pip --upgrade -r $(FORepoRoot)\docs\requirements.txt
    mkdocs build --clean --config-file $(FORepoRoot)\docs\mkdocs.yml
  displayName: 'Build website'
- pwsh: |
    # checkout gh-pages
    git reset HEAD --hard
    git fetch
    git checkout gh-pages

    if ((Test-Path "$(Build.ArtifactStagingDirectory)/gh-pages") -eq $false)
    {
        $null = New-Item -Path "$(Build.ArtifactStagingDirectory)/gh-pages" -ItemType Directory
    }

    # backup new website
    Compress-Archive -Path $(FORepoRoot)/docs/site/* -DestinationPath $(Build.ArtifactStagingDirectory)/gh-pages/gh-pages.zip -Force
    
    # wipe subfolders, to ensure we also catch page and media deletions
    get-childitem $(FORepoRoot) -Directory | remove-item -recurse -force

    # copy new website build to repro root
    Expand-Archive -Path $(Build.ArtifactStagingDirectory)\gh-pages\gh-pages.zip -DestinationPath $(FORepoRoot) -Force

    # restore sitemap.xml, as it has a timestamp that changes on build
    git restore sitemap.xml*

    # add all files and check for changes
    git add -A
    git status > $(Build.ArtifactStagingDirectory)\GitOutput\GitStatus.txt
    git diff --cached --exit-code > $(Build.ArtifactStagingDirectory)\GitOutput\GitDiff.txt
    echo ##vso[task.setvariable variable=hasChanges]%errorlevel%
  displayName: 'Check website for changes'
- task: PublishPipelineArtifact@1
  displayName: 'Publish git output artifact if website has changes'
  condition: eq(variables['hasChanges'], '1')
  inputs:
    artifactName: GitOutput
    targetPath: $(Build.ArtifactStagingDirectory)\GitOutput
- task: PublishPipelineArtifact@1
  displayName: 'Publish gh-pages artifact if website has changes'
  condition: eq(variables['hasChanges'], '1')
  inputs:
    artifactName: gh-pages
    targetPath: $(Build.ArtifactStagingDirectory)\gh-pages
- script: |
    echo ##vso[task.logissue type=warning]gh-pages documentation needs updating! Use the published gh-pages artifact from the CI build to update the gh-pages branch.
  displayName: 'Warn if website has changes'
  condition: eq(variables['hasChanges'], '1')
